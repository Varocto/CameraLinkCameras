using DALSA.SaperaLT.SapClassBasic;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Varocto.Cameras
{

    public enum ServerCategory
    {
        ServerAll,
        ServerAcq,
        ServerAcqDevice
    };
    public class SaperaCameraManager
    {

        /// <summary>
        ///  Camera config files are generated by Dalsa
        /// </summary>
        /// 
        string lsoConfigFile = "C:\\development\\Devices\\Dalsa\\Camera Files\\T_Spyder_2_Default_Default.ccf";
        string octConfigFile = "";

        private string lsoServerName;
        private string octServerName;
        private string lsoCameraName;
        private string octCameraName;

        private ServerCategory m_ServerCategory;

        public SaperaCameraManager()
        {
        }

        public void Initialize()
        {
            InitServers();
            InitCameras();
        }

        public bool CreateObjects()
        {
            return SpyderCamera.Instance.CreateObjects();
        }
        private void InitServers()
        {

            for(int i = 0; i < SapManager.GetServerCount(); i++)
	        {
                // Does this server support "Acq" (frame-grabber) or "AcqDevice" (camera)?
                 lsoServerName = SapManager.GetServerName(i);
            }
           
        }

        private void InitCameras()
        {
            int i = 0;
           
            // Add "Acq" resources (cameras) to combo
            for (i = 0; i < SapManager.GetResourceCount(lsoServerName, SapManager.ResourceType.Acq); i++)
            {
                string resourceName = SapManager.GetResourceName(lsoServerName, SapManager.ResourceType.Acq, i);
                if (resourceName == "CameraLink Full Mono")
                    lsoCameraName = resourceName;
            }

            SpyderCamera.Instance.Initialize(lsoServerName, lsoConfigFile);
         }

    }
}
